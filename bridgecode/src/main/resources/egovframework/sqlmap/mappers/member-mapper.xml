<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
                        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yedam.bridgecode.member.MemberMapper">
<!-- 반드시 패키지명 이름 제대로 확인하세요..! -->


	<insert id="insertMember" parameterType="member"><!-- sql-map-config-spring.xml에서 타입 alias정의 -->
        <![CDATA[  
        INSERT INTO member(member_id,member_password,member_nickname,member_sex,
        					member_country,member_birth,member_introduction,member_level,member_profile_img,
        					member_interest1,member_interest2,member_interest3,
        					member_name,member_warning) 
        VALUES(#{member_id},
        	#{member_password},
        	#{member_nickname},
        	#{member_sex},
        	#{member_country},
        	TO_DATE(#{member_birth},'YYYY-MM-DD'),
        	#{member_introduction},
        	1,
        	#{member_profile_img},
        	#{member_interest1},
        	#{member_interest2},
        	#{member_interest3},
        	#{member_name},
        	0)
        ]]>
	</insert>
	<update id="updateLastConnection" parameterType="member">
        <![CDATA[
        UPDATE member SET
           	   member_last_connection = sysdate
        WHERE member_id = #{member_id}
        ]]>
	</update>
	
	<update id="memberProfileUpdate" parameterType="member">
        <![CDATA[
        UPDATE member SET
           	   member_profile_img = #{member_profile_img}
        WHERE member_id = #{member_id}
        ]]>
	</update>



	<update id="updateMember" parameterType="member">
        <![CDATA[
        UPDATE member SET
            member_id = #{member_id}, 
        	member_password = #{member_password},
        	member_nickname = #{member_nickname},
        	member_sex = #{member_sex},
        	member_country = #{member_country},
        	member_birth = TO_DATE(substr(#{member_birth},0,10), 'YYYY-MM-DD'),
        	member_introduction = #{member_introduction}
        WHERE member_id = #{member_id}
        ]]>
	</update>

	<update id="updateRejectMember" parameterType="member">
        <![CDATA[
        UPDATE member SET
            member_id = #{member_id}, 
        	member_password = #{member_password},
        	member_nickname = #{member_nickname},
        	member_sex = #{member_sex},
        	member_country = #{member_country},
        	member_birth = TO_DATE(substr(#{member_birth},0,10), 'YYYY-MM-DD'),
        	member_introduction = #{member_introduction},
        	member_level = 1
        WHERE member_id = #{member_id}
        ]]>
	</update>


	<delete id="deleteMember" parameterType="member">
        <![CDATA[
        DELETE member
        WHERE member_id = #{member_id}
        ]]>
	</delete>

	<select id="getMember" resultType="member">
        <![CDATA[
        SELECT *
        FROM member
        WHERE member_id = #{member_id}
        ]]>
	</select>

	<select id="getMemberList" resultType="map">
		SELECT *
		FROM member
	</select> 
	
	<select id="getNewMemberList" resultType="map">
		SELECT *
		FROM member
		where member_level = 1
	</select> 
	
	<select id="getMemberId" resultType="map">
		SELECT member_id
		from member 
	</select> 
	
	
	<select id="getBestMemberList" resultType="map">
		SELECT m.member_id as "member_id", count(1) as "heart_count"
		from member m, heart h
		where m.member_id = h.heart_to_id
		group by member_id
		order by count(h.heart_to_id) desc
	</select> 
	
	
	<!-- <select id="getUserListVO" resultMap="userMap">
		SELECT *
		FROM users
		ORDER BY id DESC
	</select>
	
	
	<resultMap type="member" id="userMap">
		<result property="name" column="NAME" />
		<result property="id" column="ID" />
		<result property="password" column="PASSWORD" />
		<result property="role" column="ROLE" />
	</resultMap> -->

</mapper>
