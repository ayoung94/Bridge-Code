<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
                        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yedam.bridgecode.heart.HeartMapper">
<!-- 반드시 패키지명 이름 제대로 확인하세요..! -->


	<insert id="insertHeart" parameterType="heart"><!-- sql-map-config-spring.xml에서 타입 alias정의 -->
        <!-- heart_confirm_time는 빠져있음. -->
        <![CDATA[  
        INSERT INTO heart(
        	   heart_id,
        	   heart_to_id,
			   heart_from_id,
			   heart_status,
			   heart_from_time) 
			   
        VALUES(
        	   heart_seq.nextval,
        	   #{heart_to_id},
        	   #{heart_from_id},
        	   0,
        	   sysdate)
        ]]>
	</insert>

	<update id="heartYES" parameterType="hashmap">
        <![CDATA[
        UPDATE heart SET
           heart_status = 1,
           heart_confirm_time = sysdate
        WHERE heart_id = #{vo.heart_id}
        ]]>
	</update> 
	
	<update id="heartYES2" parameterType="hashmap">
        <![CDATA[
        UPDATE member SET
           member_partner_id = #{to.member_id}
        WHERE member_id = #{from.member_id}
        ]]>
	</update> 
	 
	<update id="heartYES3" parameterType="hashmap">
        <![CDATA[
        UPDATE member SET
           member_partner_id = #{from.member_id}
        WHERE member_id = #{to.member_id}
        ]]>
	</update> 
	
	<update id="heartYES4" parameterType="hashmap">
        <![CDATA[
         UPDATE heart SET
           heart_status = 3,
           heart_confirm_time = sysdate
        WHERE heart_from_id = #{from.member_id}
        and heart_status = 0
        ]]>
	</update> 
	
	<update id="heartYES5" parameterType="hashmap">
        <![CDATA[
       UPDATE heart SET
           heart_status = 3,
           heart_confirm_time = sysdate
        WHERE heart_from_id = #{to.member_id}
        and heart_status = 0
        ]]>
	</update> 

	<update id="heartNO" parameterType="heart">
        <![CDATA[
        UPDATE heart SET
           heart_status = 2,
           heart_confirm_time = sysdate
        WHERE heart_id = #{heart_id}
        ]]>
	</update>
	
	<update id="coupleDelete" parameterType="hashmap">
        <![CDATA[
        UPDATE heart SET
           heart_status = 2,
           heart_confirm_time = sysdate
        WHERE heart_from_id in(#{from.member_id},#{to.member_id})
        and heart_to_id in (#{to.member_id},#{from.member_id})
        ]]>
	</update>
	
	<update id="coupleDelete2" parameterType="hashmap">
        <![CDATA[
        UPDATE member SET
           member_partner_id = null 
        WHERE member_id = #{from.member_id}
        ]]>
	</update>
	
	<update id="coupleDelete3" parameterType="hashmap">
        <![CDATA[
        UPDATE member SET
           member_partner_id = null 
        WHERE member_id = #{to.member_id}
        ]]>
	</update>
	

	<select id="getFromHeart" resultType="heart"> 
        <![CDATA[ 
		 SELECT
  	 		   heart_to_id,
			   heart_from_id,
			   heart_status,
			   heart_from_time,
			   heart_confirm_time
        FROM heart
        WHERE heart_from_id = #{member_id}
        and heart_from_time = (select max(heart_from_time) from heart where heart_from_id = #{member_id})
        ]]>
	</select>
	 
	<select id="getHeart" resultType="heart"> 
        <![CDATA[ 
		 SELECT
  	 		   heart_to_id,
			   heart_from_id,
			   heart_status,
			   heart_from_time,
			   heart_confirm_time,
			   heart_id
        FROM heart
        WHERE heart_id = #{heart_id}
        ]]>
	</select>
	
	<select id="getCoupleHeart" resultType="heart" parameterType="hashmap"> 
        <![CDATA[  
		 SELECT
  	 		   heart_to_id,
			   heart_from_id,
			   heart_status,
			   heart_from_time,
			   heart_confirm_time,
			   heart_id
        FROM heart
        WHERE (heart_from_id = #{from.member_id}
        and heart_to_id = #{to.member_id}) OR
        (heart_from_id = #{to.member_id}
        and heart_to_id = #{from.member_id})
        ]]>
	</select>
	
	
	
		<select id="checkHeart" resultType="heart"> 
        <![CDATA[
        	SELECT 
 	   		   * 
        FROM heart
        WHERE heart_from_id = #{member_id} 
        and heart_from_time+1 > sysdate
        and heart_from_time = (select max(heart_from_time) from heart 	where heart_from_id = #{member_id})
        ]]>
	</select>
	
	<select id="getMyHeartList" resultType="map">
		SELECT *
		FROM heart
		where heart_from_id = #{member_id}
	</select> 

	<select id="getToHeartList" resultType="map">
		SELECT * 
		FROM heart
		where heart_to_id = #{member_id}
		and heart_status = 0
	</select> 

	

	<select id="getMemberList" resultType="map">
		SELECT *
		FROM member
	</select> 
	
	
	<!-- <select id="getUserListVO" resultMap="userMap">
		SELECT *
		FROM users
		ORDER BY id DESC
	</select>
	
	
	<resultMap type="member" id="userMap">
		<result property="name" column="NAME" />
		<result property="id" column="ID" />
		<result property="password" column="PASSWORD" />
		<result property="role" column="ROLE" />
	</resultMap> -->

</mapper>
